name: Docker Image CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Get Yarn cache dir
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Set up cache key for node_modules
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install Node.js dependencies
      run: yarn --frozen-lockfile


    - name: Install Prince
      run: |
        curl https://www.princexml.com/download/prince-15.3-linux-generic-x86_64.tar.gz -O
        tar zxf prince-15.3-linux-generic-x86_64.tar.gz
        cd prince-15.3-linux-generic-x86_64
        yes "" | sudo ./install.sh

    - name: Build PDF
      run: npx docusaurus-prince-pdf -u https://jukalang.com/docs --output jukadocs.pdf


    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: result
        # The output filename can be specified with --output option
        path: jukadocs.pdf
        if-no-files-found: error
        
        
    - name: Upload pdf to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: jukadocs.pdf
        asset_name: jukadocs.pdf
        tag: JukaLang
        overwrite: true
        body: "Latest version of Juka Docs"
